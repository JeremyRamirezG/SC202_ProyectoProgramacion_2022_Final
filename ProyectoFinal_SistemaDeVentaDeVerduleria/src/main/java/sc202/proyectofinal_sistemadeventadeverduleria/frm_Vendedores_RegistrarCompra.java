/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sc202.proyectofinal_sistemadeventadeverduleria;

import CRUD.ManejoFacturas;
import CRUD.ManejoProductos;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jrg71
 */
public class frm_Vendedores_RegistrarCompra extends javax.swing.JFrame implements Runnable {

    String hora, minutos,segundos,ampm;
    int dia, mes, año;
    Calendar calendario;
    Thread hilo1;
    
    /**
     * Creates new form frm_Vendedores_RegistrarCompra
     */
    public frm_Vendedores_RegistrarCompra() {
        initComponents();
        hilo1 = new Thread(this);
        hilo1.start();
        this.getRootPane().setDefaultButton(btnAgregar);
        poblarTablaFrutas();
        poblarTablaVerduras();
        poblarTablaOtros();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        lblRegistrarCompras = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblIDProducto = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtIDProducto = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        lblCantidadDisponible = new javax.swing.JLabel();
        lblCantidadActual = new javax.swing.JLabel();
        lblPrecioUnidad = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        lblMoneda = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        lblHora = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "ID Producto", "Precio", "Cantidad"
            }
        ));
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductos);

        lblRegistrarCompras.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblRegistrarCompras.setForeground(new java.awt.Color(255, 255, 255));
        lblRegistrarCompras.setText("Registrar Compra");

        lblNombre.setForeground(new java.awt.Color(255, 255, 255));
        lblNombre.setText("Nombre");

        lblIDProducto.setForeground(new java.awt.Color(255, 255, 255));
        lblIDProducto.setText("ID");

        lblCantidad.setForeground(new java.awt.Color(255, 255, 255));
        lblCantidad.setText("Cantidad");

        txtNombre.setBackground(new java.awt.Color(57, 62, 70));
        txtNombre.setForeground(new java.awt.Color(255, 255, 255));

        txtIDProducto.setBackground(new java.awt.Color(57, 62, 70));
        txtIDProducto.setForeground(new java.awt.Color(255, 255, 255));

        txtCantidad.setBackground(new java.awt.Color(57, 62, 70));
        txtCantidad.setForeground(new java.awt.Color(255, 255, 255));

        btnAgregar.setBackground(new java.awt.Color(57, 62, 70));
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnFinalizar.setBackground(new java.awt.Color(57, 62, 70));
        btnFinalizar.setForeground(new java.awt.Color(255, 255, 255));
        btnFinalizar.setText("Finalizar");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(57, 62, 70));
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        lblCantidadDisponible.setForeground(new java.awt.Color(255, 255, 255));
        lblCantidadDisponible.setText("Cantidad Disponible:");

        lblCantidadActual.setForeground(new java.awt.Color(255, 255, 255));
        lblCantidadActual.setText("0");

        lblPrecioUnidad.setForeground(new java.awt.Color(255, 255, 255));
        lblPrecioUnidad.setText("Precio unidad:");

        lblPrecio.setForeground(new java.awt.Color(255, 255, 255));
        lblPrecio.setText("0");

        lblMoneda.setForeground(new java.awt.Color(255, 255, 255));
        lblMoneda.setText("₡");

        lblFecha.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha.setText("00/00/0000");

        lblHora.setForeground(new java.awt.Color(255, 255, 255));
        lblHora.setText("00:00:00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(116, Short.MAX_VALUE)
                        .addComponent(lblRegistrarCompras)
                        .addGap(113, 113, 113))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblCantidad)
                                    .addGap(14, 14, 14)
                                    .addComponent(txtCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblIDProducto)
                                        .addComponent(lblNombre))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtNombre)
                                        .addComponent(txtIDProducto)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnAgregar)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblCantidadDisponible)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblCantidadActual)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(6, 6, 6)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblPrecioUnidad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPrecio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMoneda))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblFecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblHora)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblRegistrarCompras)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIDProducto)
                    .addComponent(txtIDProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCantidad)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCantidadDisponible)
                    .addComponent(lblCantidadActual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecioUnidad)
                    .addComponent(lblPrecio)
                    .addComponent(lblMoneda))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFecha)
                    .addComponent(lblHora))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnFinalizar)
                    .addComponent(btnSalir))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        // TODO add your handling code here:
        int filaSeleccionada = tblProductos.rowAtPoint(evt.getPoint());
        
        txtNombre.setText(tblProductos.getValueAt(filaSeleccionada, 0).toString());
        txtIDProducto.setText(tblProductos.getValueAt(filaSeleccionada, 1).toString());
        lblCantidadActual.setText(tblProductos.getValueAt(filaSeleccionada, 3).toString());
        lblPrecio.setText(tblProductos.getValueAt(filaSeleccionada, 2).toString());
    }//GEN-LAST:event_tblProductosMouseClicked

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        String idBuscar = txtIDProducto.getText();
        String cantidadAgregada = txtCantidad.getText();
        String cantidadDisponible = lblCantidadActual.getText();
        String precio = lblPrecio.getText();
        String nombre = txtNombre.getText();
        
        if((isNumeric(cantidadAgregada)&&isNumeric(cantidadDisponible)&&isDouble(precio))){
            int nuevaCantidad = (Integer.parseInt(cantidadDisponible))-(Integer.parseInt(cantidadAgregada));
            double precioTotalSinIVA = ((Double.parseDouble(cantidadAgregada))*(Double.parseDouble(precio)));
     
            if((nuevaCantidad >= 0) && (idBuscar.contains("FRU-"))){ 
                //Hacer archivo temporal
                ManejoFacturas objManejoFacturas = new ManejoFacturas();
                Productos objProductos = new Productos();

                objProductos.setNombreProducto(nombre);
                objProductos.setCantidadProducto(Integer.parseInt(cantidadAgregada));
                objManejoFacturas.setSubTotal(precioTotalSinIVA);
                
                objManejoFacturas.crearOrdenTemporal(objProductos);
                
                //Modificar cantidad existente
                ManejoProductos objManejoProductos = new ManejoProductos();
                objManejoProductos.setTipoProducto("Frutas");
                objManejoProductos.setIdProductoManejoArchivos(idBuscar);
                
                objManejoProductos.setNuevoNombre(nombre);
                objManejoProductos.setNuevaCantidad(nuevaCantidad);

                objManejoProductos.actualizarCantidadVerdurasYFrutas();
                limpiarCajas();
            }else if((nuevaCantidad >= 0) && (idBuscar.contains("VER-"))){
                //Hacer archivo temporal
                ManejoFacturas objManejoFacturas = new ManejoFacturas();
                Productos objProductos = new Productos();

                objProductos.setNombreProducto(nombre);
                objProductos.setCantidadProducto(Integer.parseInt(cantidadAgregada));
                objManejoFacturas.setSubTotal(precioTotalSinIVA);
                
                objManejoFacturas.crearOrdenTemporal(objProductos);
                
                //Modificar cantidad existente
                ManejoProductos objManejoProductos = new ManejoProductos();
                objManejoProductos.setTipoProducto("Verduras");
                objManejoProductos.setIdProductoManejoArchivos(idBuscar);
                
                objManejoProductos.setNuevoNombre(nombre);
                objManejoProductos.setNuevaCantidad(nuevaCantidad);

                objManejoProductos.actualizarCantidadVerdurasYFrutas();
                limpiarCajas();
            }else if((nuevaCantidad >= 0) && (idBuscar.contains("OTR-"))){
                //Hacer archivo temporal
                ManejoFacturas objManejoFacturas = new ManejoFacturas();
                Productos objProductos = new Productos();

                objProductos.setNombreProducto(nombre);
                objProductos.setCantidadProducto(Integer.parseInt(cantidadAgregada));
                objManejoFacturas.setSubTotal(precioTotalSinIVA);
                
                objManejoFacturas.crearOrdenTemporal(objProductos);
                
                //Modificar cantidad existente
                ManejoProductos objManejoProductos = new ManejoProductos();
                objManejoProductos.setTipoProducto("Otros");
                objManejoProductos.setIdProductoManejoArchivos(idBuscar);
                
                objManejoProductos.setNuevoNombre(nombre);
                objManejoProductos.setNuevaCantidad(nuevaCantidad);

                objManejoProductos.actualizarCantidadOtros();
                limpiarCajas();
            }else{
                JOptionPane.showMessageDialog(null,"Ingrese un ID de producto y/o o cantidad válida");
                limpiarCajas();
            }
            
        }else{
            JOptionPane.showMessageDialog(null,"Ingrese los datos númericos o dígitos según corresponda");
            limpiaCajaDeNumeros();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        // TODO add your handling code here:
        ManejoFacturas objManejoFacturas = new ManejoFacturas();
        objManejoFacturas.crearFactura();
        JOptionPane.showMessageDialog(null,"Compra facturada, Factura No."+objManejoFacturas.getStringUnicoFactura());
        this.dispose();
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private static boolean isNumeric(String cadena){
        try {
            Integer.parseInt(cadena);
            return true;
        } catch (NumberFormatException nfe){
            return false;
        }
    }
    private static boolean isDouble(String cadena){
        try {
            Double.parseDouble(cadena);
            return true;
        } catch (NumberFormatException nfe){
            return false;
        }
    }
    private void limpiaCajaDeNumeros(){
        txtCantidad.setText("");
    }
    private void limpiarCajas(){
        txtIDProducto.setText("");
        txtCantidad.setText("");
        txtNombre.setText("");
        lblCantidadActual.setText("0");
        lblPrecio.setText("0.0");
    }
    private void poblarTablaFrutas() {
        ManejoProductos objManejoProductos = new ManejoProductos();
        objManejoProductos.setTipoProducto("Frutas");

        ArrayList<Frutas> listaFrutas = new ArrayList<Frutas>();
        listaFrutas = objManejoProductos.obtenerListaFrutas();

        //Enlazar la tabla que hicimos con la de la interfaz
        DefaultTableModel modelo = (DefaultTableModel) tblProductos.getModel();

        Object vector[] = new Object[4];

        if (listaFrutas != null) {
            for (int i = 0; i < listaFrutas.size(); i++) {
                vector[0] = listaFrutas.get(i).getNombreProducto();
                vector[1] = listaFrutas.get(i).getIdProducto();
                vector[2] = listaFrutas.get(i).getPrecioProducto();
                vector[3] = listaFrutas.get(i).getCantidadProducto();

                modelo.addRow(vector);
            }
        }

    } 
    private void poblarTablaVerduras() {
        ManejoProductos objManejoProductos = new ManejoProductos();
        objManejoProductos.setTipoProducto("Verduras");

        ArrayList<Verduras> listaVerduras = new ArrayList<Verduras>();
        listaVerduras = objManejoProductos.obtenerListaVerduras();

        //Enlazar la tabla que hicimos con la de la interfaz
        DefaultTableModel modelo = (DefaultTableModel) tblProductos.getModel();

        Object vector[] = new Object[4];

        if (listaVerduras != null) {
            for (int i = 0; i < listaVerduras.size(); i++) {
                vector[0] = listaVerduras.get(i).getNombreProducto();
                vector[1] = listaVerduras.get(i).getIdProducto();
                vector[2] = listaVerduras.get(i).getPrecioProducto();
                vector[3] = listaVerduras.get(i).getCantidadProducto();

                modelo.addRow(vector);
            }
        }

    }
    private void poblarTablaOtros(){
        ManejoProductos objManejoProductos = new ManejoProductos();
        objManejoProductos.setTipoProducto("Otros");
        
        ArrayList <Otros> listaOtros = new ArrayList<Otros>();
        listaOtros= objManejoProductos.obtenerListaOtros();
        
        //Enlazar la tabla que hicimos con la de la interfaz
        DefaultTableModel modelo = (DefaultTableModel) tblProductos.getModel();
        
        Object vector[] = new Object[8];
        
        if (listaOtros!=null){
            for (int i = 0; i <listaOtros.size(); i++){
                vector[0] = listaOtros.get(i).getNombreProducto();
                vector[1] = listaOtros.get(i).getIdProducto();
                vector[2] = listaOtros.get(i).getPrecioProducto();
                vector[3] = listaOtros.get(i).getCantidadProducto();
                
                modelo.addRow(vector);
            }
        }
        
    }
    
    public void run(){
        Thread ct = Thread.currentThread();
        while(ct == hilo1) {
            calcularHora();
            lblHora.setText(hora + ":" + minutos + ":" + segundos);
            
            calcularFecha();
            lblFecha.setText(dia+"/"+mes+"/"+año);
            
            try {
                Thread.sleep(1000);
           }catch(InterruptedException e) {}
        }
    }
    public void calcularHora(){
        Calendar calendario = new GregorianCalendar();
        Date fechaHoraActual = new Date();
        
        calendario.setTime(fechaHoraActual);
        hora = ""+calendario.get(Calendar.HOUR_OF_DAY);
        minutos = calendario.get(Calendar.MINUTE)>9?""+calendario.get(Calendar.MINUTE):"0"+calendario.get(Calendar.MINUTE);
        segundos = calendario.get(Calendar.SECOND)>9?""+calendario.get(Calendar.SECOND):"0"+calendario.get(Calendar.SECOND);
    }
    public void calcularFecha(){
        Calendar calendario = new GregorianCalendar();
        Date fechaHoraActual = new Date();
        
        mes = calendario.get(Calendar.MONTH)+1;
        dia = calendario.get(Calendar.DAY_OF_MONTH);
        año = calendario.get(Calendar.YEAR);
    }

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_Vendedores_RegistrarCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_Vendedores_RegistrarCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_Vendedores_RegistrarCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_Vendedores_RegistrarCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_Vendedores_RegistrarCompra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblCantidadActual;
    private javax.swing.JLabel lblCantidadDisponible;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblHora;
    private javax.swing.JLabel lblIDProducto;
    private javax.swing.JLabel lblMoneda;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblPrecioUnidad;
    private javax.swing.JLabel lblRegistrarCompras;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtIDProducto;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

}
